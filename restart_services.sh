#!/bin/bash
"""
Restart Bible Clock services to apply code changes
"""

echo "üîÑ Restarting Bible Clock services..."
echo "===================================="

# Stop all Bible Clock processes
echo "üìõ Stopping existing processes..."
sudo pkill -f "bible_clock" 2>/dev/null || echo "   No bible_clock processes found"
sudo pkill -f "python.*app.py" 2>/dev/null || echo "   No web server processes found"
sudo pkill -f "porcupine_voice" 2>/dev/null || echo "   No voice control processes found"

# Wait a moment for clean shutdown
sleep 2

echo "‚úÖ Processes stopped"

# Check if we have a systemd service
if systemctl is-active --quiet bible-clock 2>/dev/null; then
    echo "üîÑ Restarting systemd service..."
    sudo systemctl restart bible-clock
    echo "‚úÖ Systemd service restarted"
elif [ -f "./start_bible_clock.sh" ]; then
    echo "üîÑ Starting Bible Clock manually..."
    ./start_bible_clock.sh &
    echo "‚úÖ Bible Clock started"
else
    echo "‚ö†Ô∏è No startup script found. Please start Bible Clock manually."
fi

# Wait a moment for services to start
sleep 3

echo ""
echo "üß™ Testing services..."
echo "===================="

# Check if web server is running
if curl -s http://localhost:5000 >/dev/null 2>&1; then
    echo "‚úÖ Web server is running on port 5000"
else
    echo "‚ùå Web server not responding on port 5000"
fi

# Check processes
if pgrep -f "python.*app.py" >/dev/null; then
    echo "‚úÖ Web interface process is running"
else
    echo "‚ùå Web interface process not found"
fi

if pgrep -f "bible_clock\|porcupine" >/dev/null; then
    echo "‚úÖ Bible Clock main process is running"
else
    echo "‚ùå Bible Clock main process not found"
fi

echo ""
echo "üéØ Service restart complete!"
echo "Access your Bible Clock at: http://$(hostname -I | awk '{print $1}'):5000"
echo ""
echo "Test the time formatting fix:"
echo "‚Ä¢ Check the live preview in the web interface"
echo "‚Ä¢ Look for '05:05' format instead of '5:5'"
echo "‚Ä¢ Say 'Bible Clock, what time is it' to test voice"